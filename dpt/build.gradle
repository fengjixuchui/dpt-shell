apply plugin: 'java-library'


java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}


jar {
    archiveBaseName = "dpt"
    archiveVersion = "1.0"
    archiveFileName.set("dpt.jar")
    manifest {
        attributes 'Main-Class': 'com.luoye.dpt.Dpt'
    }
    destinationDirectory = new File("$rootProject.projectDir/executable")
    //添加将引用的jar的源码打入最终的jar
    dependsOn configurations.runtimeClasspath
    from {
        configurations.runtimeClasspath.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }

    from fileTree(dir: 'src/main', includes: ['assets/**'])

    //排除引用的jar中的签名信息
    exclude 'META-INF/*.SF', 'META-INF/*.DSA', 'META-INF/*.RSA', 'META-INF/*.MF', 'META-INF/*.txt', "META-INF/versions/**"

    manifest {
        attributes("Implementation-Title": archiveBaseName,
                "Implementation-Version": archiveVersion,
                "Build-Time": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "Build-Number": System.env.BUILD_NUMBER ? System.env.BUILD_NUMBER : "-1",
        )
    }
    from(project.parent.projectDir) {
        include 'NOTICE.txt'
        include 'LICENSE.txt'
        into('META-INF')
    }
}

//添加源码中引入的非代码文件，例如资源等
sourceSets.main.resources {
    srcDirs = [
            "src/main/java",
    ];
    include "**/*.*"
}



dependencies {
    implementation fileTree(dir:'libs',include:['*.jar'])
    implementation 'de.upb.cs.swt:axml:2.1.1'
    implementation 'org.slf4j:slf4j-api:1.7.30'
    implementation 'org.slf4j:slf4j-simple:1.7.30'
    implementation group: 'net.lingala.zip4j', name: 'zip4j', version: '2.6.4'
    implementation group: 'org.bouncycastle', name: 'bcprov-ext-jdk16', version: '1.46'
}